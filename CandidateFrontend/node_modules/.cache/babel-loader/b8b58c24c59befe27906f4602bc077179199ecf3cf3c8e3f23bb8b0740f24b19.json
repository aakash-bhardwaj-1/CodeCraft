{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Downloads/CodeCraft-Technical-Skills-Evaluation-Hub-master/CandidateFrontend/src/pages/ViewJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/header/Navbar\";\nimport PageHeading from \"../components/header/PageHeading\";\nimport Table from \"../components/tables/Table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewJobs() {\n  _s();\n  const columns = [\"Company Name\", \"Job Role\", \"Job Description\", \"Requirements\", \"Apply\"];\n  function JobApplyDTO(id, company, candidateId) {\n    return {\n      cid: parseInt(candidateId),\n      jid: id,\n      company_name: company\n    };\n  }\n  const handleViewClick = async (id, company, candidateId) => {\n    try {\n      const dto = JobApplyDTO(id, company, candidateId);\n      await axios.post(\"http://localhost:8000/candidate/apply\", dto);\n      console.log('Job application submitted:', dto);\n      // After applying, fetch the updated list of applied jobs and update the table\n      fetchAppliedJobs();\n      alert(\"Interview schedule will be notified via e-mail\");\n    } catch (error) {\n      console.error('Error applying for job:', error);\n    }\n  };\n  const [tableData, setTableData] = useState([]);\n  const fetchAppliedJobs = async () => {\n    try {\n      const appliedJobsResponse = await axios.get(`http://localhost:8000/candidate/appliedJobs/${localStorage.getItem(\"candidateId\")}`);\n      const appliedJobs = appliedJobsResponse.data;\n\n      // Mark applied jobs in the table data\n      const updatedTableData = tableData.map(job => {\n        const isApplied = appliedJobs.some(appliedJob => appliedJob.jid === job.id);\n        return {\n          ...job,\n          applied: isApplied // Adding a flag to indicate if the job is applied\n        };\n      });\n      setTableData(updatedTableData);\n    } catch (error) {\n      console.error('Error fetching applied jobs:', error);\n    }\n  };\n  const renderViewButton = (id, company, isApplied) => {\n    const buttonStyle = {\n      color: 'white'\n    };\n    if (isApplied) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-button\",\n        disabled: true,\n        style: buttonStyle,\n        children: \"Applied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewClick(id, company, localStorage.getItem(\"candidateId\")),\n        className: \"view-button\",\n        style: buttonStyle,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch all active jobs\n        const allJobsResponse = await axios.get(\"http://localhost:8000/interviewer/all-active-jobs\");\n        const allJobs = allJobsResponse.data;\n\n        // Fetch applied jobs\n        const appliedJobsResponse = await axios.get(`http://localhost:8000/candidate/appliedJobs/${localStorage.getItem(\"candidateId\")}`);\n        const appliedJobs = appliedJobsResponse.data;\n\n        // Mark applied jobs in the table data\n        const updatedTableData = allJobs.map(job => {\n          const isApplied = appliedJobs.some(appliedJob => appliedJob.jid === job.id);\n          return {\n            ...job,\n            applied: isApplied // Adding a flag to indicate if the job is applied\n          };\n        });\n        setTableData(updatedTableData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageHeading, {\n      title: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: '20px',\n        paddingRight: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: tableData.map(row => ({\n          \"Company Name\": row.company,\n          \"Job Role\": row.roleType,\n          \"Job Description\": row.jobDescription,\n          \"Requirements\": row.allRequirements.map(req => req.requirementName).join(', '),\n          \"Apply\": renderViewButton(row.id, row.company, row.applied) // Pass the applied flag\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewJobs, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = ViewJobs;\nexport default ViewJobs;\nvar _c;\n$RefreshReg$(_c, \"ViewJobs\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","PageHeading","Table","axios","jsxDEV","_jsxDEV","ViewJobs","_s","columns","JobApplyDTO","id","company","candidateId","cid","parseInt","jid","company_name","handleViewClick","dto","post","console","log","fetchAppliedJobs","alert","error","tableData","setTableData","appliedJobsResponse","get","localStorage","getItem","appliedJobs","data","updatedTableData","map","job","isApplied","some","appliedJob","applied","renderViewButton","buttonStyle","color","className","disabled","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fetchData","allJobsResponse","allJobs","title","paddingLeft","paddingRight","row","roleType","jobDescription","allRequirements","req","requirementName","join","_c","$RefreshReg$"],"sources":["/home/aakash/Downloads/CodeCraft-Technical-Skills-Evaluation-Hub-master/CandidateFrontend/src/pages/ViewJobs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/header/Navbar\";\nimport PageHeading from \"../components/header/PageHeading\";\nimport Table from \"../components/tables/Table\";\nimport axios from \"axios\";\n\nfunction ViewJobs() {\n    const columns = [\"Company Name\", \"Job Role\", \"Job Description\", \"Requirements\", \"Apply\"];\n    \n    function JobApplyDTO(id, company, candidateId) {\n        return {\n            cid: parseInt(candidateId),\n            jid: id,\n            company_name: company\n        };\n    }\n\n    const handleViewClick = async (id, company, candidateId) => {\n        try {\n            const dto = JobApplyDTO(id, company, candidateId);\n            await axios.post(\"http://localhost:8000/candidate/apply\", dto);\n            console.log('Job application submitted:', dto);\n            // After applying, fetch the updated list of applied jobs and update the table\n            fetchAppliedJobs();\n            alert(\"Interview schedule will be notified via e-mail\");\n        } catch (error) {\n            console.error('Error applying for job:', error);\n        }\n    };\n\n    const [tableData, setTableData] = useState([]);\n\n    const fetchAppliedJobs = async () => {\n        try {\n            const appliedJobsResponse = await axios.get(`http://localhost:8000/candidate/appliedJobs/${localStorage.getItem(\"candidateId\")}`);\n            const appliedJobs = appliedJobsResponse.data;\n\n            // Mark applied jobs in the table data\n            const updatedTableData = tableData.map(job => {\n                const isApplied = appliedJobs.some(appliedJob => appliedJob.jid === job.id);\n                return {\n                    ...job,\n                    applied: isApplied // Adding a flag to indicate if the job is applied\n                };\n            });\n\n            setTableData(updatedTableData);\n        } catch (error) {\n            console.error('Error fetching applied jobs:', error);\n        }\n    };\n\n    const renderViewButton = (id, company, isApplied) => {\n        const buttonStyle = {\n            color: 'white'\n        };\n\n        if (isApplied) {\n            return <button className=\"view-button\" disabled style={buttonStyle}>Applied</button>;\n        } else {\n            return (\n                <button \n                    onClick={() => handleViewClick(id, company, localStorage.getItem(\"candidateId\"))} \n                    className=\"view-button\" \n                    style={buttonStyle}\n                >\n                    Apply\n                </button>\n            );\n        }\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch all active jobs\n                const allJobsResponse = await axios.get(\"http://localhost:8000/interviewer/all-active-jobs\");\n                const allJobs = allJobsResponse.data;\n\n                // Fetch applied jobs\n                const appliedJobsResponse = await axios.get(`http://localhost:8000/candidate/appliedJobs/${localStorage.getItem(\"candidateId\")}`);\n                const appliedJobs = appliedJobsResponse.data;\n\n                // Mark applied jobs in the table data\n                const updatedTableData = allJobs.map(job => {\n                    const isApplied = appliedJobs.some(appliedJob => appliedJob.jid === job.id);\n                    return {\n                        ...job,\n                        applied: isApplied // Adding a flag to indicate if the job is applied\n                    };\n                });\n\n                setTableData(updatedTableData);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            <PageHeading title=\"Available Jobs\" />\n            <div style={{ paddingLeft: '20px', paddingRight: '20px' }}>\n                <Table \n                    columns={columns}\n                    data={tableData.map(row => ({\n                        \"Company Name\": row.company,\n                        \"Job Role\": row.roleType,\n                        \"Job Description\": row.jobDescription,\n                        \"Requirements\": row.allRequirements.map(req => req.requirementName).join(', '),\n                        \"Apply\": renderViewButton(row.id, row.company, row.applied), // Pass the applied flag\n                    }))}\n                /> \n            </div>\n        </div>\n    );\n}\n\nexport default ViewJobs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,OAAO,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,CAAC;EAExF,SAASC,WAAWA,CAACC,EAAE,EAAEC,OAAO,EAAEC,WAAW,EAAE;IAC3C,OAAO;MACHC,GAAG,EAAEC,QAAQ,CAACF,WAAW,CAAC;MAC1BG,GAAG,EAAEL,EAAE;MACPM,YAAY,EAAEL;IAClB,CAAC;EACL;EAEA,MAAMM,eAAe,GAAG,MAAAA,CAAOP,EAAE,EAAEC,OAAO,EAAEC,WAAW,KAAK;IACxD,IAAI;MACA,MAAMM,GAAG,GAAGT,WAAW,CAACC,EAAE,EAAEC,OAAO,EAAEC,WAAW,CAAC;MACjD,MAAMT,KAAK,CAACgB,IAAI,CAAC,uCAAuC,EAAED,GAAG,CAAC;MAC9DE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,GAAG,CAAC;MAC9C;MACAI,gBAAgB,CAAC,CAAC;MAClBC,KAAK,CAAC,gDAAgD,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMK,mBAAmB,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,+CAA8CC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC,CAAC;MACjI,MAAMC,WAAW,GAAGJ,mBAAmB,CAACK,IAAI;;MAE5C;MACA,MAAMC,gBAAgB,GAAGR,SAAS,CAACS,GAAG,CAACC,GAAG,IAAI;QAC1C,MAAMC,SAAS,GAAGL,WAAW,CAACM,IAAI,CAACC,UAAU,IAAIA,UAAU,CAACvB,GAAG,KAAKoB,GAAG,CAACzB,EAAE,CAAC;QAC3E,OAAO;UACH,GAAGyB,GAAG;UACNI,OAAO,EAAEH,SAAS,CAAC;QACvB,CAAC;MACL,CAAC,CAAC;MAEFV,YAAY,CAACO,gBAAgB,CAAC;IAClC,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAC9B,EAAE,EAAEC,OAAO,EAAEyB,SAAS,KAAK;IACjD,MAAMK,WAAW,GAAG;MAChBC,KAAK,EAAE;IACX,CAAC;IAED,IAAIN,SAAS,EAAE;MACX,oBAAO/B,OAAA;QAAQsC,SAAS,EAAC,aAAa;QAACC,QAAQ;QAACC,KAAK,EAAEJ,WAAY;QAAAK,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IACxF,CAAC,MAAM;MACH,oBACI7C,OAAA;QACI8C,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAACP,EAAE,EAAEC,OAAO,EAAEkB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAE;QACjFa,SAAS,EAAC,aAAa;QACvBE,KAAK,EAAEJ,WAAY;QAAAK,QAAA,EACtB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAEjB;EACJ,CAAC;EAEDpD,SAAS,CAAC,MAAM;IACZ,MAAMsD,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAMC,eAAe,GAAG,MAAMlD,KAAK,CAACyB,GAAG,CAAC,mDAAmD,CAAC;QAC5F,MAAM0B,OAAO,GAAGD,eAAe,CAACrB,IAAI;;QAEpC;QACA,MAAML,mBAAmB,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,+CAA8CC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC,CAAC;QACjI,MAAMC,WAAW,GAAGJ,mBAAmB,CAACK,IAAI;;QAE5C;QACA,MAAMC,gBAAgB,GAAGqB,OAAO,CAACpB,GAAG,CAACC,GAAG,IAAI;UACxC,MAAMC,SAAS,GAAGL,WAAW,CAACM,IAAI,CAACC,UAAU,IAAIA,UAAU,CAACvB,GAAG,KAAKoB,GAAG,CAACzB,EAAE,CAAC;UAC3E,OAAO;YACH,GAAGyB,GAAG;YACNI,OAAO,EAAEH,SAAS,CAAC;UACvB,CAAC;QACL,CAAC,CAAC;QAEFV,YAAY,CAACO,gBAAgB,CAAC;MAClC,CAAC,CAAC,OAAOT,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAED4B,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI/C,OAAA;IAAAyC,QAAA,gBACIzC,OAAA,CAACL,MAAM;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV7C,OAAA,CAACJ,WAAW;MAACsD,KAAK,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC7C,OAAA;MAAKwC,KAAK,EAAE;QAAEW,WAAW,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAX,QAAA,eACtDzC,OAAA,CAACH,KAAK;QACFM,OAAO,EAAEA,OAAQ;QACjBwB,IAAI,EAAEP,SAAS,CAACS,GAAG,CAACwB,GAAG,KAAK;UACxB,cAAc,EAAEA,GAAG,CAAC/C,OAAO;UAC3B,UAAU,EAAE+C,GAAG,CAACC,QAAQ;UACxB,iBAAiB,EAAED,GAAG,CAACE,cAAc;UACrC,cAAc,EAAEF,GAAG,CAACG,eAAe,CAAC3B,GAAG,CAAC4B,GAAG,IAAIA,GAAG,CAACC,eAAe,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;UAC9E,OAAO,EAAExB,gBAAgB,CAACkB,GAAG,CAAChD,EAAE,EAAEgD,GAAG,CAAC/C,OAAO,EAAE+C,GAAG,CAACnB,OAAO,CAAC,CAAE;QACjE,CAAC,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3C,EAAA,CAjHQD,QAAQ;AAAA2D,EAAA,GAAR3D,QAAQ;AAmHjB,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}